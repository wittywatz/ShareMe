{"ast":null,"code":"var _jsxFileName = \"/Users/watson/Desktop/pixie/pixie_frontend/src/components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MasonryLayout from './MasonryLayout';\nimport { client } from '../client';\nimport { feedQuery, searchQuery } from '../utils/data';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = _ref => {\n  _s();\n\n  let {\n    searchTerm\n  } = _ref;\n  const [pins, setPins] = useState();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (searchTerm !== '') {\n      setLoading(true);\n      const query = searchQuery(searchTerm.toLowerCase());\n      client.fetch(query).then(data => {\n        setPins(data);\n        setLoading(false);\n      });\n    } else {\n      client.fetch(feedQuery).then(data => {\n        setPins(data);\n        setLoading(false);\n      });\n    }\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      message: \"Searching pins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this), (pins === null || pins === void 0 ? void 0 : pins.length) !== 0 && /*#__PURE__*/_jsxDEV(MasonryLayout, {\n      pins: pins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }, this), (pins === null || pins === void 0 ? void 0 : pins.length) === 0 && searchTerm !== '' && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10 text-center text-xl \",\n      children: \"No Pins Found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"fDrk+IfbNmXVzFkEavhIMDLLmcY=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/watson/Desktop/pixie/pixie_frontend/src/components/Search.jsx"],"names":["React","useEffect","useState","MasonryLayout","client","feedQuery","searchQuery","Spinner","Search","searchTerm","pins","setPins","loading","setLoading","query","toLowerCase","fetch","then","data","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,eAAvC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,MAAM,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,UAAU,KAAK,EAAnB,EAAuB;AACrBI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMC,KAAK,GAAGR,WAAW,CAACG,UAAU,CAACM,WAAX,EAAD,CAAzB;AACAX,MAAAA,MAAM,CAACY,KAAP,CAAaF,KAAb,EAAoBG,IAApB,CAA0BC,IAAD,IAAU;AACjCP,QAAAA,OAAO,CAACO,IAAD,CAAP;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAHD;AAID,KAPD,MAOO;AACLT,MAAAA,MAAM,CAACY,KAAP,CAAaX,SAAb,EAAwBY,IAAxB,CAA8BC,IAAD,IAAU;AACrCP,QAAAA,OAAO,CAACO,IAAD,CAAP;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAHD;AAID;AACF,GAdQ,EAcN,CAACJ,UAAD,CAdM,CAAT;AAgBA,sBACE;AAAA,eAEGG,OAAO,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFd,EAGG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,MAAN,MAAiB,CAAjB,iBAAsB,QAAC,aAAD;AAAe,MAAA,IAAI,EAAET;AAArB;AAAA;AAAA;AAAA;AAAA,YAHzB,EAIG,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,MAAN,MAAiB,CAAjB,IAAsBV,UAAU,KAAK,EAArC,IAA2C,CAACG,OAA5C,iBACC;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9BD;;GAAMJ,M;;KAAAA,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport MasonryLayout from './MasonryLayout';\nimport { client } from '../client';\nimport { feedQuery, searchQuery } from '../utils/data';\nimport Spinner from './Spinner';\n\nconst Search = ({ searchTerm }) => {\n  const [pins, setPins] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (searchTerm !== '') {\n      setLoading(true);\n      const query = searchQuery(searchTerm.toLowerCase());\n      client.fetch(query).then((data) => {\n        setPins(data);\n        setLoading(false);\n      });\n    } else {\n      client.fetch(feedQuery).then((data) => {\n        setPins(data);\n        setLoading(false);\n      });\n    }\n  }, [searchTerm]);\n\n  return (\n    <div>\n\n      {loading && <Spinner message=\"Searching pins\" />}\n      {pins?.length !== 0 && <MasonryLayout pins={pins} />}\n      {pins?.length === 0 && searchTerm !== '' && !loading && (\n        <div className=\"mt-10 text-center text-xl \">No Pins Found!</div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}