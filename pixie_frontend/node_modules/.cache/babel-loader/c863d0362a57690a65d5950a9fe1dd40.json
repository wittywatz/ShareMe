{"ast":null,"code":"\"use strict\";\n\nvar generateHelpUrl = require('@sanity/generate-help-url');\n\nvar assign = require('object-assign');\n\nvar validate = require('./validators');\n\nvar warnings = require('./warnings');\n\nvar defaultCdnHost = 'apicdn.sanity.io';\nvar defaultConfig = {\n  apiHost: 'https://api.sanity.io',\n  apiVersion: '1',\n  useProjectHostname: true,\n  gradientMode: false,\n  isPromiseAPI: true\n};\nvar LOCALHOSTS = ['localhost', '127.0.0.1', '0.0.0.0'];\n\nvar isLocal = function isLocal(host) {\n  return LOCALHOSTS.indexOf(host) !== -1;\n};\n\nexports.defaultConfig = defaultConfig; // eslint-disable-next-line complexity\n\nexports.initConfig = function (config, prevConfig) {\n  var specifiedConfig = assign({}, prevConfig, config);\n\n  if (!specifiedConfig.apiVersion) {\n    warnings.printNoApiVersionSpecifiedWarning();\n  }\n\n  var newConfig = assign({}, defaultConfig, specifiedConfig);\n  var gradientMode = newConfig.gradientMode;\n  var projectBased = !gradientMode && newConfig.useProjectHostname;\n\n  if (typeof Promise === 'undefined') {\n    var helpUrl = generateHelpUrl('js-client-promise-polyfill');\n    throw new Error(\"No native Promise-implementation found, polyfill needed - see \".concat(helpUrl));\n  }\n\n  if (gradientMode && !newConfig.namespace) {\n    throw new Error('Configuration must contain `namespace` when running in gradient mode');\n  }\n\n  if (projectBased && !newConfig.projectId) {\n    throw new Error('Configuration must contain `projectId`');\n  }\n\n  var isBrowser = typeof window !== 'undefined' && window.location && window.location.hostname;\n  var isLocalhost = isBrowser && isLocal(window.location.hostname);\n\n  if (isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== true) {\n    warnings.printBrowserTokenWarning();\n  } else if ((!isBrowser || isLocalhost) && newConfig.useCdn && newConfig.token) {\n    warnings.printCdnTokenWarning();\n  } else if (typeof newConfig.useCdn === 'undefined') {\n    warnings.printCdnWarning();\n  }\n\n  if (projectBased) {\n    validate.projectId(newConfig.projectId);\n  }\n\n  if (!gradientMode && newConfig.dataset) {\n    validate.dataset(newConfig.dataset, newConfig.gradientMode);\n  }\n\n  if ('requestTagPrefix' in newConfig) {\n    // Allow setting and unsetting request tag prefix\n    newConfig.requestTagPrefix = newConfig.requestTagPrefix ? validate.requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, '') : undefined;\n  }\n\n  newConfig.apiVersion = \"\".concat(newConfig.apiVersion).replace(/^v/, '');\n  newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost;\n  newConfig.useCdn = Boolean(newConfig.useCdn) && !newConfig.token && !newConfig.withCredentials;\n  exports.validateApiVersion(newConfig.apiVersion);\n\n  if (newConfig.gradientMode) {\n    newConfig.url = newConfig.apiHost;\n    newConfig.cdnUrl = newConfig.apiHost;\n  } else {\n    var hostParts = newConfig.apiHost.split('://', 2);\n    var protocol = hostParts[0];\n    var host = hostParts[1];\n    var cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n\n    if (newConfig.useProjectHostname) {\n      newConfig.url = \"\".concat(protocol, \"://\").concat(newConfig.projectId, \".\").concat(host, \"/v\").concat(newConfig.apiVersion);\n      newConfig.cdnUrl = \"\".concat(protocol, \"://\").concat(newConfig.projectId, \".\").concat(cdnHost, \"/v\").concat(newConfig.apiVersion);\n    } else {\n      newConfig.url = \"\".concat(newConfig.apiHost, \"/v\").concat(newConfig.apiVersion);\n      newConfig.cdnUrl = newConfig.url;\n    }\n  }\n\n  return newConfig;\n};\n\nexports.validateApiVersion = function validateApiVersion(apiVersion) {\n  if (apiVersion === '1' || apiVersion === 'X') {\n    return;\n  }\n\n  var apiDate = new Date(apiVersion);\n  var apiVersionValid = /^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0;\n\n  if (!apiVersionValid) {\n    throw new Error('Invalid API version string, expected `1` or date in format `YYYY-MM-DD`');\n  }\n};","map":{"version":3,"sources":["/Users/watson/Desktop/pixie/pixie_frontend/node_modules/@sanity/client/lib/config.js"],"names":["generateHelpUrl","require","assign","validate","warnings","defaultCdnHost","defaultConfig","apiHost","apiVersion","useProjectHostname","gradientMode","isPromiseAPI","LOCALHOSTS","isLocal","host","indexOf","exports","initConfig","config","prevConfig","specifiedConfig","printNoApiVersionSpecifiedWarning","newConfig","projectBased","Promise","helpUrl","Error","concat","namespace","projectId","isBrowser","window","location","hostname","isLocalhost","token","ignoreBrowserTokenWarning","printBrowserTokenWarning","useCdn","printCdnTokenWarning","printCdnWarning","dataset","requestTagPrefix","requestTag","replace","undefined","isDefaultApi","Boolean","withCredentials","validateApiVersion","url","cdnUrl","hostParts","split","protocol","cdnHost","apiDate","Date","apiVersionValid","test","getTime"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar generateHelpUrl = require('@sanity/generate-help-url');\n\nvar assign = require('object-assign');\n\nvar validate = require('./validators');\n\nvar warnings = require('./warnings');\n\nvar defaultCdnHost = 'apicdn.sanity.io';\nvar defaultConfig = {\n  apiHost: 'https://api.sanity.io',\n  apiVersion: '1',\n  useProjectHostname: true,\n  gradientMode: false,\n  isPromiseAPI: true\n};\nvar LOCALHOSTS = ['localhost', '127.0.0.1', '0.0.0.0'];\n\nvar isLocal = function isLocal(host) {\n  return LOCALHOSTS.indexOf(host) !== -1;\n};\n\nexports.defaultConfig = defaultConfig; // eslint-disable-next-line complexity\n\nexports.initConfig = function (config, prevConfig) {\n  var specifiedConfig = assign({}, prevConfig, config);\n\n  if (!specifiedConfig.apiVersion) {\n    warnings.printNoApiVersionSpecifiedWarning();\n  }\n\n  var newConfig = assign({}, defaultConfig, specifiedConfig);\n  var gradientMode = newConfig.gradientMode;\n  var projectBased = !gradientMode && newConfig.useProjectHostname;\n\n  if (typeof Promise === 'undefined') {\n    var helpUrl = generateHelpUrl('js-client-promise-polyfill');\n    throw new Error(\"No native Promise-implementation found, polyfill needed - see \".concat(helpUrl));\n  }\n\n  if (gradientMode && !newConfig.namespace) {\n    throw new Error('Configuration must contain `namespace` when running in gradient mode');\n  }\n\n  if (projectBased && !newConfig.projectId) {\n    throw new Error('Configuration must contain `projectId`');\n  }\n\n  var isBrowser = typeof window !== 'undefined' && window.location && window.location.hostname;\n  var isLocalhost = isBrowser && isLocal(window.location.hostname);\n\n  if (isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== true) {\n    warnings.printBrowserTokenWarning();\n  } else if ((!isBrowser || isLocalhost) && newConfig.useCdn && newConfig.token) {\n    warnings.printCdnTokenWarning();\n  } else if (typeof newConfig.useCdn === 'undefined') {\n    warnings.printCdnWarning();\n  }\n\n  if (projectBased) {\n    validate.projectId(newConfig.projectId);\n  }\n\n  if (!gradientMode && newConfig.dataset) {\n    validate.dataset(newConfig.dataset, newConfig.gradientMode);\n  }\n\n  if ('requestTagPrefix' in newConfig) {\n    // Allow setting and unsetting request tag prefix\n    newConfig.requestTagPrefix = newConfig.requestTagPrefix ? validate.requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, '') : undefined;\n  }\n\n  newConfig.apiVersion = \"\".concat(newConfig.apiVersion).replace(/^v/, '');\n  newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost;\n  newConfig.useCdn = Boolean(newConfig.useCdn) && !newConfig.token && !newConfig.withCredentials;\n  exports.validateApiVersion(newConfig.apiVersion);\n\n  if (newConfig.gradientMode) {\n    newConfig.url = newConfig.apiHost;\n    newConfig.cdnUrl = newConfig.apiHost;\n  } else {\n    var hostParts = newConfig.apiHost.split('://', 2);\n    var protocol = hostParts[0];\n    var host = hostParts[1];\n    var cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n\n    if (newConfig.useProjectHostname) {\n      newConfig.url = \"\".concat(protocol, \"://\").concat(newConfig.projectId, \".\").concat(host, \"/v\").concat(newConfig.apiVersion);\n      newConfig.cdnUrl = \"\".concat(protocol, \"://\").concat(newConfig.projectId, \".\").concat(cdnHost, \"/v\").concat(newConfig.apiVersion);\n    } else {\n      newConfig.url = \"\".concat(newConfig.apiHost, \"/v\").concat(newConfig.apiVersion);\n      newConfig.cdnUrl = newConfig.url;\n    }\n  }\n\n  return newConfig;\n};\n\nexports.validateApiVersion = function validateApiVersion(apiVersion) {\n  if (apiVersion === '1' || apiVersion === 'X') {\n    return;\n  }\n\n  var apiDate = new Date(apiVersion);\n  var apiVersionValid = /^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0;\n\n  if (!apiVersionValid) {\n    throw new Error('Invalid API version string, expected `1` or date in format `YYYY-MM-DD`');\n  }\n};"]},"metadata":{},"sourceType":"script"}